name: build

on: [push, pull_request]

env:
  PYTEST_ADDOPTS: "--color=yes"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1.1.1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Pip cache
        uses: actions/cache@v1
        id: pip-cache
        with:
          path: ~/.cache/pip
          key: pip-${{ hashFiles('**/pyproject.toml') }}
      - name: Upgrade Pip
        run: python -m pip install -U pip
      - name: Install Poetry
        run: python -m pip install poetry
      - name: Set up Poetry cache
        uses: actions/cache@v1
        id: poetry-cache
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: poetry-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: |
          poetry run pip install -U pip
          poetry install
          poetry run pip uninstall -y pelican
          poetry run pip install -e git://github.com/getpelican/pelican.git#egg=pelican
      - name: Run tests
        run: poetry run invoke tests


  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1.1.1
        with:
          python-version: 3.7
      - name: Set up Pip cache
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: pip-${{ hashFiles('**/pyproject.toml') }}
      - name: Install linters
        run: python -m pip install -U pip invoke flake8 black isort
      - name: Run linters
        run: invoke lint
